[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "historical-fidelity-simulator"
dynamic = ["version"]
description = "A unified simulator for studying historical fidelity through classical and quantum approaches"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Historical Fidelity Simulator Contributors"}
]
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "qutip>=4.6.0",
    "matplotlib>=3.4.0",
    "tqdm>=4.62.0",
    "numba>=0.54.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "pylint>=2.15.0",
    "ipykernel>=6.0.0",
    "jupyter>=1.0.0",
]
gpu = [
    "cupy-cuda11x>=11.0.0",
]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

# Add type checking for GPU-related modules
[[tool.mypy.overrides]]
module = ["numba.*", "cupy.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["historical_fidelity_simulator"]
omit = [
    "src/historical_fidelity_simulator/utils/gpu_accelerator.py",  # GPU code is conditionally imported
] 